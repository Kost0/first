from pygame import *
class GameSprite(sprite.Sprite):
   def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
       sprite.Sprite.__init__(self)
       self.image = transform.scale(image.load(player_image), (size_x, size_y))
       self.speed = player_speed
       self.rect = self.image.get_rect()
       self.rect.x = player_x
       self.rect.y = player_y

   def reset(self):
       window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_l(self):
        keys = key.get_pressed()
        if key[K_w] and self.y > 5:
            self.rect.y -= self.speed
        if key[K_s] and self.y < win_height - 150:
            self.rect.y += self.speed

    def update_r(self):
        keys = key.get_pressed()
        if key[K_o] and self.y > 5:
            self.rect.y -= self.speed
        if key[K_l] and self.y < win_height - 150:
            self.rect.y += self.speed

backgroundcolor = (200,255,255)
win_width = 700
win_height = 500
FPS = 60

display.set_caption("Shooter")
window = display.set_mode((win_width, win_height))
window.fill(backgroundcolor)

finish = False
game = True
clock = time.Clock()

r_1 = Player('racket.png',30,200,4,50,150)
r_2 = Player('racket.png',520,200,4,50,150)
ball = GameSprite('tenis_bal.png',200,200,4,50,50)

font.init()
font = Font.font(None,35)
lose1 = font.render('PLAYER1 LOSE!',True,(180,0,0))
lose2 = font.render('PLAYER2 LOSE!',True,(180,0,0))
ball_direction_x = 3
ball_direction_y = 3
while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
        if e.type == KEYDOWN:
            if e.key == K_ESCAPE:
                game = False
            if e.type == K_r:
                finish = False
                ball.rect.x = 200
                ball.rect.y = 200
                ball_direction_y = 3
                ball_direction_x = 3
if not finish:
    window.fill(backgroundcolor)
    r1.update_l()
    r2.update_r()
    ball.rect.x += ball_direction_x
    ball.rect.y += ball_direction_y

    if sprite.collide_rect(r1,ball) or sprite.collide_rect(r2,ball):
        ball_direction_x *= -1

    if ball.rect.y > WINDOW_HEIGHT - 50 or ball.rect.y < 0:
        ball_direction_y *= -1

    if ball.rect.x < 0:
        finish = True
        window.blit(lose1, (200, 200))

    if ball.rect.x > WINDOW_WIDTH:
        finish = True
        window.blit(lose2, (200, 200))

    display.update()
    time.delay(50)
